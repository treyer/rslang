{"version":3,"sources":["pages/games/games.tsx","pages/main/main.tsx","pages/statistics/statistics.tsx","Components/EnglishLevelButton/EnglishLevelButton.tsx","pages/textbook/components/TextbookLevelInfomation/TextbookLevelInformation.tsx","pages/textbook/TextbookEnglishLevels/TextbookEnglishLevels.tsx","consts/index.ts","api/baseAPI.ts","api/errors.ts","api/wordsAPI.ts","pages/textbook/components/TextbookGamesButton/TextbookGamesButton.tsx","Context/login-context.tsx","api/userWordsAPI.ts","pages/textbook/constants/constants.tsx","pages/textbook/utils/getTooltipMesage.ts","pages/textbook/components/WordCard/WordCard.tsx","pages/textbook/components/WordCardList/WordCardList.tsx","api/userAggregatedWordsAPI.ts","pages/textbook/TextbookWords/TextbookWords.tsx","pages/textbook/Dictionary/Dictionary.tsx","pages/team/team.tsx","pages/games/GameSprint/GameSprint.tsx","Components/GameAudio/GameAudio.tsx","pages/games/GameSprint/GameSprintLevel/Timer/timer.tsx","pages/games/GameSprint/GameSprintLevel/Parrots/parrots.tsx","pages/games/GameSprint/GameSprintLevel/Tick/tick.tsx","pages/games/GameSprint/GameSprintLevel/TickPannel/tick-pannel.tsx","pages/games/GameSprint/GameSprintLevel/GameSprintLevel.tsx","General/Function-helpers.tsx","Context/audio-context.tsx","Components/GameAudioAnswer/Answer.tsx","Components/GameAudioQuestion/Question.tsx","Components/GameAudioLevel/GameAudioLevel.tsx","General/constants.tsx","Components/footer/footer.tsx","api/usersAPI.ts","General/utils.tsx","Components/register-form/register.tsx","Components/login-form/login.tsx","Components/header/header.tsx","App.tsx","index.tsx"],"names":["Games","className","Card","sx","maxWidth","height","CardMedia","component","alt","image","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","Link","to","Main","Statistics","EnglishLevelButton","id","code","level","path","onHover","currLevel","classNames","onMouseEnter","memo","TextbookLevelInformation","img","text","src","TextbookEnglishLevels","useState","activeLevelId","setActiveLevelId","handleLevelHover","useCallback","e","target","activeId","Object","values","ENGLISH_LEVELS","map","SERVER_URL","process","BaseAPI","url","defaultUrl","Error","this","route","headers","fetch","method","Accept","body","JSON","stringify","result","errorsMap","ok","status","USERS_API_ERRORS","StatusCodes","UNPROCESSABLE_ENTITY","UNAUTHORIZED","NOT_FOUND","BAD_REQUEST","FORBIDDEN","EXPECTATION_FAILED","INTERNAL_SERVER_ERROR","USER_WORDS_API_ERRORS","PAYMENT_REQUIRED","WORDS_API_ERRORS","USER_AGGREGATED_WORDS_API_ERRORS","WordsAPI","page","group","getWordsCb","finallyCb","errorCb","_error","console","error","get","then","handleError","json","data","catch","finally","wordId","getWordCb","TextbookGamesButton","disabledBtn","name","onClick","disabled","LoginContext","createContext","userLoginData","isLogined","token","refreshToken","userId","userName","isLoginOpen","isRegisterOpen","pageForGames","setUserLogin","UserWordsAPI","getUserWordsCb","Authorization","dataWord","createUserWordCb","_result","post","getUserWordCb","updateUserWordCb","put","deleteUserWordCb","deletedWordId","delete","DICTIONARY_CATEGORIES","filter","message","activeBtn","tooltipAddMessage","tooltipRemoweMessage","getTooltipMessage","currCategory","WordCard","word","textMeaning","textExample","transcription","wordTranslate","textMeaningTranslate","textExampleTranslate","onPlayWord","onSelectCard","onUnSelectCard","isAuthorized","isDifficult","isStudied","selected","setSelected","handleSelectCard","handleUnSelectCard","textAlign","display","alignItems","IconButton","Tooltip","title","replace","WordCardList","words","isPlaying","setIsPlaying","currentTrack","setCurrentTrack","playList","setPlayList","playedWordId","setPlayedWordId","playedAudio","useMemo","track","Audio","handleCardHover","currentTarget","playTextbookWord","pause","play","useEffect","addEventListener","nextTrack","newPlayList","reduce","acc","audio","audioMeaning","audioExample","_id","userWord","optional","deleted","UserAggregatedWordsAPI","getAggregatedUserWordsCb","wordsPerPage","params","URLSearchParams","toString","paginatedResults","TextbookWords","location","useLocation","lengthLocation","pathname","split","length","groupLevel","setWords","currPage","setPage","useContext","loading","setLoading","setDisabled","updatedWord","setUpdatedWord","isGameBtnDisabled","every","localStorage","getItem","getAggregatedUserWords","getWords","createUserWord","difficulty","failCounter","successCounter","correctAnswer","deleteUserWord","CircularProgress","Pagination","count","defaultPage","onChange","event","pageNum","Dictionary","currFilter","setCurrFilter","setCurrCategory","onHandleChangeCategory","filterRequest","hasEmptyMessage","hasWordCards","updateUserWord","Team","CardActionArea","width","href","rel","GameSprint","activeGameId","setActiveGameId","handleGameLevel","GameAudio","Timer","time","isSound","isPlay","Parrots","correctAnswersCount","displayParrot2","setDisplayParrot2","displayParrot3","setDisplayParrot3","displayParrot4","setDisplayParrot4","style","backgroundImage","Tick","backgroundSize","TickPannel","statusTick1","setStatusTick1","statusTick2","setStatusTick2","statusTick3","setStatusTick3","justifyContent","GameSprintLevel","setTime","setIsSound","setIsPlay","setCorrectAnswersCount","setTimeout","prev","shuffleAnswers","question","incorrectAnswers","sort","Math","random","initialState","questions","currentQuestionIndex","showResults","answers","currentAnswer","correctAnswerCount","reducer","state","action","type","payload","normalBase","backendQuestions","backendQuestion","index","i","idx","round","includes","push","AppContext","React","dispatch","AppProvider","children","useReducer","Provider","value","Answer","answerText","onSelectAnswer","correctAnswerClass","wrongAnswerClass","disabledClass","Question","currentQuestion","answer","GameAudioLevel","scoreQuestion","allQuestions","ROUTES","routePath","element","ROUTES_IN_NAV","Sections","Footer","UsersAPI","dataUser","createNewUserCb","newUser","getUserCb","dataLogin","loginUserCb","updateUserCb","deleteUserCb","getNewUserTokenCb","required","trim","validEmail","isEmail","validUsername","validPassword","setUserLoginToLocalStorage","setItem","String","clearUserLoginInLocalStorage","Register","username","setUsername","email","setEmail","password","setPassword","isSuccess","setIsSuccess","setMessage","submitBtnState","setSubmitBtnState","form","useRef","checkBtn","Avatar","margin","onSubmit","preventDefault","current","validateAll","context","_errors","createUser","errorMessage","ref","marginLeft","marginBottom","validations","marginTop","Login","navigate","useNavigate","loginUser","role","Header","handleCloseModals","el","isActive","App","getNewUserToken","errorMess","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7a1a861.chunk.js","sourcesContent":["import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\n\nconst Games = () => {\n  return (\n    <div className=\"App-games\">\n      <div className=\"games-container\">\n        <Card sx={{ maxWidth: 500, height: 500 }}>\n          <CardMedia\n            component=\"img\"\n            alt=\"sprint\"\n            height=\"300\"\n            image=\"./assets/img/sprint1.jpg\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              Спринт\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Проверьте, сколько очков вы можете получить за одну минуту,\n              угадывая слова. С помощью этой игры вы тренируете навык быстрого\n              перевода с английского языка на русский.\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              component={Link}\n              to=\"/games/sprint\"\n              variant=\"contained\"\n            >\n              Играть\n            </Button>\n          </CardActions>\n        </Card>\n        <Card sx={{ maxWidth: 500, height: 500 }}>\n          <CardMedia\n            component=\"img\"\n            alt=\"sprint\"\n            height=\"300\"\n            image=\"./assets/img/audio.jpeg\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              Аудиовызов\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Проверьте,сколько слов вы правильно переведете.С помощью этой игры\n              вы улучшите восприятие речи на слух.\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              component={Link}\n              to=\"/games/audio\"\n              variant=\"contained\"\n            >\n              Играть\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Games;\n","const Main = () => {\n  return <div className=\"App-main\" />;\n};\n\nexport default Main;\n","const Statistics = () => {\n  return <div className=\"App-statistics\" />;\n};\n\nexport default Statistics;\n","import { memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport classNames from 'classnames';\n\ntype TEnglishLevelButtonProps = {\n  id: string;\n  code: string;\n  level?: string;\n  path: string;\n  onHover?: (e: MouseEvent) => void;\n  currLevel?: string;\n};\n\nconst EnglishLevelButton = ({\n  id,\n  code,\n  level,\n  path,\n  onHover,\n  currLevel,\n}: TEnglishLevelButtonProps) => (\n  <Button\n    component={Link}\n    to={`${path}${id}`}\n    id={id}\n    key={id}\n    variant=\"contained\"\n    className={classNames(`textbook_btn textbook_button-${id}`, {\n      'textbook_active-btn': id === currLevel,\n    })}\n    onMouseEnter={onHover}\n  >\n    <span className=\"textbook_code-title\">{code}</span>\n    <span className=\"textbook_level-title\">{level}</span>\n  </Button>\n);\n\nexport default memo(EnglishLevelButton);\n","import { memo } from 'react';\n\ntype TTextbookLevelInformation = {\n  img: string;\n  text: string;\n};\n\nconst TextbookLevelInformation = ({ img, text }: TTextbookLevelInformation) => (\n  <section className=\"textbook_level-list-section-inform\">\n    <img src={img} alt=\"English level img\" className=\"textbook_img\" />\n    <p className=\"textbook_level-list-text\">{text}</p>\n  </section>\n);\n\nexport default memo(TextbookLevelInformation);\n","import React, { MouseEvent, useCallback, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { ENGLISH_LEVELS } from '../../../General/constants';\nimport EnglishLevelButton from '../../../Components/EnglishLevelButton/EnglishLevelButton';\nimport TextbookLevelInformation from '../components/TextbookLevelInfomation/TextbookLevelInformation';\nimport './TextbookEnglishLevels.scss';\n\ntype TLevelId = keyof typeof ENGLISH_LEVELS;\n\nconst TextbookEnglishLevels = () => {\n  const [activeLevelId, setActiveLevelId] = useState<TLevelId>(0);\n\n  const handleLevelHover = useCallback((e: MouseEvent) => {\n    const target = e.target as HTMLElement;\n    if (!target) {\n      return;\n    }\n    const activeId = target.id as unknown as TLevelId;\n    setActiveLevelId(activeId);\n  }, []);\n\n  return (\n    <div className=\"App-textbook\">\n      <Typography variant=\"h3\" className=\"textbook_level-title\">\n        Выбери уровень для изучения\n      </Typography>\n      <div className=\"textbook_levels-list\">\n        <section className=\"textbook_level-list-section-button\">\n          {Object.values(ENGLISH_LEVELS).map(({ id, code, level }) => (\n            <EnglishLevelButton\n              path=\"/textbook/words/\"\n              key={id}\n              id={id}\n              code={code}\n              level={level}\n              onHover={handleLevelHover}\n            />\n          ))}\n        </section>\n        {ENGLISH_LEVELS[activeLevelId] && (\n          <TextbookLevelInformation\n            img={ENGLISH_LEVELS[activeLevelId].img}\n            text={ENGLISH_LEVELS[activeLevelId].text}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TextbookEnglishLevels;\n","export const SERVER_URL = process.env.REACT_APP_SERVER_URL || '';\n","import { SERVER_URL } from '../consts';\nimport { TAPIErrorsMap } from './types';\n\nexport class BaseAPI {\n  url: string;\n\n  constructor(url?: string) {\n    const defaultUrl = url || SERVER_URL;\n\n    if (!defaultUrl) {\n      throw new Error('URL for BE service is not provided!');\n    }\n    this.url = defaultUrl;\n  }\n\n  get(route: string, headers: { [key: string]: string } = {}) {\n    return fetch(`${this.url}/${route}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        ...headers,\n      },\n    });\n  }\n\n  post(route: string, body = {}, headers: { [key: string]: string } = {}) {\n    return fetch(`${this.url}/${route}`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  put(route: string, body = {}, headers: { [key: string]: string } = {}) {\n    return fetch(`${this.url}/${route}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  delete(route: string, headers: { [key: string]: string } = {}) {\n    return fetch(`${this.url}/${route}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        ...headers,\n      },\n    });\n  }\n\n  static handleError(result: Response, errorsMap: TAPIErrorsMap) {\n    if (result.ok) {\n      return;\n    }\n    const { status } = result;\n    throw new Error(errorsMap[status] || 'Unknown error!');\n  }\n}\n","import { StatusCodes } from 'http-status-codes';\n\nimport { TAPIErrorsMap } from './types';\n\nexport const USERS_API_ERRORS: TAPIErrorsMap = {\n  [StatusCodes.UNPROCESSABLE_ENTITY]: 'Incorrect e-mail or password.',\n  [StatusCodes.UNAUTHORIZED]: 'Access token is missing or invalid.',\n  [StatusCodes.NOT_FOUND]: 'User not found.',\n  [StatusCodes.BAD_REQUEST]: 'Bad request.',\n  [StatusCodes.FORBIDDEN]: 'Incorrect e-mail or password',\n  [StatusCodes.EXPECTATION_FAILED]:\n    'Пользователь с указанным email уже существует.',\n  [StatusCodes.INTERNAL_SERVER_ERROR]: 'Internal Server Error.',\n};\n\nexport const USER_WORDS_API_ERRORS: TAPIErrorsMap = {\n  [StatusCodes.UNAUTHORIZED]: 'Unauthorized.',\n  [StatusCodes.PAYMENT_REQUIRED]: 'Access token is missing or invalid.',\n  [StatusCodes.BAD_REQUEST]: 'Bad request.',\n  [StatusCodes.NOT_FOUND]: 'User`s word not found.',\n  [StatusCodes.EXPECTATION_FAILED]: 'This user`s word already exists.',\n  [StatusCodes.INTERNAL_SERVER_ERROR]: 'Internal Server Error.',\n};\n\nexport const WORDS_API_ERRORS: TAPIErrorsMap = {\n  [StatusCodes.INTERNAL_SERVER_ERROR]: 'Internal Server Error.',\n  [StatusCodes.NOT_FOUND]: 'Word not found.',\n};\n\nexport const USER_AGGREGATED_WORDS_API_ERRORS: TAPIErrorsMap = {\n  [StatusCodes.INTERNAL_SERVER_ERROR]: 'Internal Server Error.',\n  [StatusCodes.NOT_FOUND]: 'Word not found.',\n  [StatusCodes.UNAUTHORIZED]: 'Unauthorized.',\n};\n\nexport const USERS_STATISTIC_API_ERRORS: TAPIErrorsMap = {\n  [StatusCodes.UNAUTHORIZED]: 'Unauthorized.',\n  [StatusCodes.INTERNAL_SERVER_ERROR]: 'Internal Server Error.',\n  [StatusCodes.NOT_FOUND]: 'Word not found.',\n};\n","import { BaseAPI } from './baseAPI';\nimport { TWord } from './types';\nimport { WORDS_API_ERRORS } from './errors';\n\nclass WordsAPI extends BaseAPI {\n  getWords(\n    page: number,\n    group: number,\n    getWordsCb: (data: TWord[]) => void,\n    finallyCb = () => {},\n    errorCb = (_error: Error) => {\n      console.error(_error);\n    },\n  ) {\n    this.get(`words?page=${page}&group=${group}`)\n      .then((result) => {\n        BaseAPI.handleError(result, WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((data) => getWordsCb(data))\n      .catch((error) => errorCb(error))\n      .finally(() => finallyCb());\n  }\n\n  getWord(\n    wordId: string,\n    getWordCb: (data: TWord) => void,\n    errorCb = (_error: Error) => {\n      console.error(_error);\n    },\n  ) {\n    this.get(`words/${wordId}`)\n      .then((result) => {\n        BaseAPI.handleError(result, WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => getWordCb(result))\n      .catch((error) => errorCb(error));\n  }\n}\n\nexport default new WordsAPI();\n","import { memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from '@mui/material';\n\ntype TTextbookGamesButtonProps = {\n  path: string;\n  name: string;\n  className?: string;\n  disabledBtn?: boolean;\n  onClick?: (e: MouseEvent) => void;\n  id?: string;\n};\n\nconst TextbookGamesButton = ({\n  disabledBtn,\n  path,\n  name,\n  className,\n  id,\n  onClick,\n}: TTextbookGamesButtonProps) => (\n  <Button\n    disabled={disabledBtn}\n    id={id}\n    component={Link}\n    to={`${path}`}\n    variant=\"contained\"\n    className={className}\n    onClick={onClick}\n  >\n    <span className=\"textbook_games-button-title\">{name}</span>\n  </Button>\n);\n\nexport default memo(TextbookGamesButton);\n","import { createContext } from 'react';\nimport { TAppState } from '../General/types';\n\nexport const LoginContext = createContext<TAppState>({\n  userLoginData: {\n    isLogined: false,\n    token: '',\n    refreshToken: '',\n    userId: '',\n    userName: '',\n    isLoginOpen: false,\n    isRegisterOpen: false,\n    pageForGames: -1,\n  },\n  setUserLogin: () => {},\n});\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseAPI } from './baseAPI';\nimport { TUserWord } from './types';\nimport { USER_WORDS_API_ERRORS } from './errors';\n\nclass UserWordsAPI extends BaseAPI {\n  getUserWords(\n    userId: string,\n    token: string,\n    getUserWordsCb: (data: TUserWord[]) => void,\n  ) {\n    this.get(`users/${userId}/words`, { Authorization: `Bearer ${token}` })\n      .then((result) => {\n        BaseAPI.handleError(result, USER_WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => getUserWordsCb(result))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createUserWord(\n    userId: string,\n    wordId: string,\n    token: string,\n    dataWord: TUserWord,\n    createUserWordCb = (_result: TUserWord) => {},\n  ) {\n    this.post(`users/${userId}/words/${wordId}`, dataWord, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USER_WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((data) => createUserWordCb(data))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  getUserWord(\n    userId: string,\n    wordId: string,\n    token: string,\n    getUserWordCb: (data: TUserWord) => void,\n  ) {\n    this.get(`users/${userId}/words/${wordId}`, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USER_WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => getUserWordCb(result))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  updateUserWord(\n    userId: string,\n    token: string,\n    wordId: string,\n    dataWord: TUserWord,\n\n    updateUserWordCb = (_result: TUserWord) => {},\n  ) {\n    this.put(`users/${userId}/words/${wordId}`, dataWord, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USER_WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => updateUserWordCb(result))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  deleteUserWord(\n    userId: string,\n    wordId: string,\n    token: string,\n    deleteUserWordCb = (deletedWordId: string) => {},\n  ) {\n    this.delete(`users/${userId}/words/${wordId}`, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USER_WORDS_API_ERRORS);\n      })\n      .then(() => deleteUserWordCb(wordId))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n}\n\nexport default new UserWordsAPI();\n","export const DICTIONARY_CATEGORIES = {\n  '0': {\n    id: '0',\n    name: 'Сложные',\n    filter:\n      '{\"userWord.difficulty\":\"difficult\", \"userWord.optional.isDifficult\":true}',\n    message: 'У Вас нет сложных слов в словаре.',\n    activeBtn: true,\n    tooltipAddMessage: 'Добавить в изученные слова',\n    tooltipRemoweMessage: 'Удалить из сложных слов',\n  },\n  '1': {\n    id: '1',\n    name: 'Изучаемые',\n    filter:\n      '{\"$and\":[{\"userWord.difficulty\":\"difficult\", \"userWord.optional.isDifficult\":true}]}',\n    message: 'У Вас нет изучаемых слов в словаре.',\n    activeBtn: true,\n    tooltipAddMessage: 'Добавить в изученные слова',\n  },\n  '2': {\n    id: '2',\n    name: 'Изученные',\n    filter:\n      '{\"$and\":[{\"userWord.difficulty\":\"difficult\", \"userWord.optional.deleted\":true}]}',\n    message: 'У Вас нет удаленных слов в словаре.',\n    activeBtn: true,\n    tooltipAddMessage: 'Добавить в сложные слова',\n  },\n};\n\nexport const WORDS_PER_PAGE = '20';\n","import { DICTIONARY_CATEGORIES } from '../constants/constants';\n\nexport const getTooltipMessage = (currCategory?: string) => {\n  switch (currCategory) {\n    case '0':\n      return DICTIONARY_CATEGORIES[currCategory].tooltipAddMessage;\n    case '1':\n      return DICTIONARY_CATEGORIES[currCategory].tooltipAddMessage;\n    case '2':\n      return DICTIONARY_CATEGORIES[currCategory].tooltipAddMessage;\n    default:\n      return 'Добавить в сложные слова';\n  }\n};\n","import { memo, MouseEvent, useCallback, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  IconButton,\n} from '@mui/material';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { SERVER_URL } from '../../../../consts';\nimport { DICTIONARY_CATEGORIES } from '../../constants/constants';\nimport { getTooltipMessage } from '../../utils/getTooltipMesage';\n\ntype TWordCardProps = {\n  id: string;\n  word: string;\n  image: string;\n  textMeaning: string;\n  textExample: string;\n  transcription: string;\n  wordTranslate: string;\n  textMeaningTranslate: string;\n  textExampleTranslate: string;\n  onPlayWord: (e: MouseEvent) => void;\n  onHover: (e: MouseEvent) => void;\n  onSelectCard: (id: string) => void;\n  onUnSelectCard: (id: string) => void;\n  isDifficult: boolean;\n  isStudied: boolean;\n  group?: number;\n  isAuthorized?: boolean;\n  currCategory?: string;\n};\n\nconst WordCard = ({\n  id,\n  word,\n  image,\n  textMeaning,\n  textExample,\n  transcription,\n  wordTranslate,\n  textMeaningTranslate,\n  textExampleTranslate,\n  onPlayWord,\n  onHover,\n  onSelectCard,\n  onUnSelectCard,\n  group,\n  isAuthorized,\n  currCategory,\n  isDifficult,\n  isStudied,\n}: TWordCardProps) => {\n  const [selected, setSelected] = useState(false);\n  const handleSelectCard = useCallback(() => {\n    onSelectCard(id);\n    setSelected(true);\n  }, [id, onSelectCard]);\n\n  const handleUnSelectCard = useCallback(() => {\n    onUnSelectCard(id);\n    setSelected(false);\n  }, [id, onUnSelectCard]);\n\n  return (\n    <Card\n      sx={{ maxWidth: 345 }}\n      className={classNames('words_list-card', `textbook_word-card-${group}`, {\n        'is-selected': selected || isDifficult,\n        'is-studied': isStudied,\n      })}\n      id={word}\n      onMouseEnter={onHover}\n    >\n      <CardMedia\n        component=\"img\"\n        height=\"170\"\n        image={`${SERVER_URL}/${image}`}\n        alt={word}\n      />\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h4\"\n          textAlign=\"right\"\n          component=\"div\"\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <span>{word}</span>\n          <CardActions>\n            <IconButton aria-label=\"volume\" onClick={onPlayWord}>\n              <VolumeUpIcon />\n            </IconButton>\n          </CardActions>\n          <CardActions>\n            <Tooltip title={getTooltipMessage(currCategory)}>\n              <IconButton\n                id={id}\n                aria-label=\"add\"\n                onClick={handleSelectCard}\n                className={classNames({\n                  'is-unauthorized':\n                    !isAuthorized || isDifficult || selected || isStudied,\n                })}\n              >\n                <AddCircleOutlineIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Удалить из сложных слов\">\n              <IconButton\n                aria-label=\"remove\"\n                onClick={handleUnSelectCard}\n                className={classNames({\n                  'is-unauthorized': !isAuthorized || isStudied,\n                  'is-difficult':\n                    currCategory === '1' || currCategory === '2'\n                      ? DICTIONARY_CATEGORIES[0].activeBtn\n                      : false,\n                })}\n              >\n                <RemoveCircleOutlineIcon />\n              </IconButton>\n            </Tooltip>\n          </CardActions>\n        </Typography>\n        <Typography variant=\"subtitle1\" textAlign=\"right\">\n          {wordTranslate} {transcription}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"right\">\n          {textMeaning.replace(/<\\/?[a-zA-Z]+>/gi, '')}\n        </Typography>\n        <Typography variant=\"body2\" textAlign=\"right\">\n          {textExample.replace(/<\\/?[a-zA-Z]+>/gi, '')}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"right\">\n          {textMeaningTranslate}\n        </Typography>\n        <Typography variant=\"body2\" textAlign=\"right\">\n          {textExampleTranslate}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default memo(WordCard);\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react';\nimport { TWord } from '../../../../api/types';\n\nimport { SERVER_URL } from '../../../../consts';\nimport { TPlayListCollection } from '../../TextbookWords/TextbookWords';\nimport WordCard from '../WordCard/WordCard';\n\nimport './WordCardList.scss';\n\ntype TWordCardListProps = {\n  words: TWord[];\n  group?: number;\n  onSelectCard: (id: string) => void;\n  onUnSelectCard: (id: string) => void;\n  isAuthorized?: boolean;\n  currCategory?: string;\n};\n\nconst WordCardList = ({\n  words,\n  group,\n  onSelectCard,\n  onUnSelectCard,\n  isAuthorized,\n  currCategory,\n}: TWordCardListProps) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const [playList, setPlayList] = useState<TPlayListCollection>({});\n  const [playedWordId, setPlayedWordId] = useState('');\n  const playedAudio = useMemo(() => {\n    const track = playList[playedWordId]?.[currentTrack];\n    return track ? new Audio(track) : null;\n  }, [currentTrack, playedWordId, playList]);\n\n  const handleCardHover = useCallback((e: MouseEvent) => {\n    const target = e.currentTarget as HTMLElement;\n    if (!target) {\n      return;\n    }\n\n    setPlayedWordId(target.id);\n    setCurrentTrack(0);\n  }, []);\n\n  const playTextbookWord = useCallback(() => {\n    if (!playedAudio) {\n      return;\n    }\n\n    if (isPlaying) {\n      playedAudio.pause();\n      setIsPlaying(false);\n      return;\n    }\n\n    if (!isPlaying) {\n      playedAudio.play();\n      setIsPlaying(true);\n    }\n  }, [isPlaying, playedAudio]);\n\n  useEffect(() => {\n    if (playedAudio) {\n      playedAudio.addEventListener('ended', () => {\n        const nextTrack = playList[playedWordId]?.[currentTrack + 1]\n          ? currentTrack + 1\n          : 0;\n        setIsPlaying(false);\n        setCurrentTrack(nextTrack);\n      });\n    }\n  }, [playedAudio, playedWordId, currentTrack, playList]);\n\n  useEffect(() => {\n    const newPlayList = words.reduce(\n      (acc, { word, audio, audioMeaning, audioExample }) => {\n        acc[word] = [\n          `${SERVER_URL}/${audio}`,\n          `${SERVER_URL}/${audioMeaning}`,\n          `${SERVER_URL}/${audioExample}`,\n        ];\n\n        return acc;\n      },\n      {} as TPlayListCollection,\n    );\n    setPlayList(newPlayList);\n  }, [words]);\n\n  return (\n    <div className=\"words_list-container\">\n      {words.map(\n        ({\n          _id,\n          id,\n          word,\n          image,\n          textMeaning,\n          textExample,\n          transcription,\n          wordTranslate,\n          textMeaningTranslate,\n          textExampleTranslate,\n          userWord,\n        }) => (\n          <WordCard\n            key={_id || id}\n            id={_id || id}\n            word={word}\n            image={image}\n            textMeaning={textMeaning}\n            textExample={textExample}\n            transcription={transcription}\n            wordTranslate={wordTranslate}\n            textMeaningTranslate={textMeaningTranslate}\n            textExampleTranslate={textExampleTranslate}\n            onPlayWord={playTextbookWord}\n            onHover={handleCardHover}\n            onSelectCard={onSelectCard}\n            onUnSelectCard={onUnSelectCard}\n            group={group}\n            isAuthorized={isAuthorized}\n            currCategory={currCategory}\n            isDifficult={!!userWord?.optional?.isDifficult}\n            isStudied={!!userWord?.optional?.deleted}\n          />\n        ),\n      )}\n    </div>\n  );\n};\n\nexport default WordCardList;\n","import { BaseAPI } from './baseAPI';\nimport { USER_AGGREGATED_WORDS_API_ERRORS } from './errors';\nimport { TWord } from './types';\n\nclass UserAggregatedWordsAPI extends BaseAPI {\n  getAggregatedUserWords(\n    userId: string,\n    token: string,\n    getAggregatedUserWordsCb: (data: TWord[]) => void,\n    group?: string,\n    page?: string,\n    wordsPerPage?: string,\n    filter?: string,\n    finallyCb = () => {},\n  ) {\n    const params = new URLSearchParams({\n      ...(group ? { group } : {}),\n      ...(page ? { page } : {}),\n      ...(filter ? { filter } : {}),\n      ...(wordsPerPage ? { wordsPerPage } : {}),\n    }).toString();\n    this.get(`users/${userId}/aggregatedWords?${params}`, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USER_AGGREGATED_WORDS_API_ERRORS);\n        return result.json();\n      })\n      .then((data) => {\n        return getAggregatedUserWordsCb(data[0].paginatedResults);\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n      .finally(() => finallyCb());\n  }\n}\n\nexport default new UserAggregatedWordsAPI();\n","import { useLocation } from 'react-router-dom';\nimport { Pagination, CircularProgress } from '@mui/material';\n\nimport {\n  useContext,\n  useCallback,\n  useState,\n  useEffect,\n  ChangeEvent,\n} from 'react';\nimport classNames from 'classnames';\nimport { TWord } from '../../../api/types';\nimport WordsAPI from '../../../api/wordsAPI';\nimport EnglishLevelButton from '../../../Components/EnglishLevelButton/EnglishLevelButton';\nimport { ENGLISH_LEVELS } from '../../../General/constants';\nimport TextbookGamesButton from '../components/TextbookGamesButton/TextbookGamesButton';\nimport { LoginContext } from '../../../Context/login-context';\nimport UserWordsAPI from '../../../api/userWordsAPI';\nimport WordCardList from '../components/WordCardList/WordCardList';\n\nimport './TextbookWords.scss';\nimport UserAggregatedWordsAPI from '../../../api/userAggregatedWordsAPI';\nimport { WORDS_PER_PAGE } from '../constants/constants';\n\nexport type TPlayListCollection = {\n  [key: string]: string[];\n};\n\nconst TextbookWords = () => {\n  const location = useLocation();\n  const lengthLocation = location.pathname.split('/').length;\n  const groupLevel = +location.pathname.split('/')[lengthLocation - 1];\n\n  const [words, setWords] = useState<TWord[]>([]);\n  const [currPage, setPage] = useState(1);\n  const { userLoginData, setUserLogin } = useContext(LoginContext);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [updatedWord, setUpdatedWord] = useState({});\n  const handleChangePage = (event: ChangeEvent<unknown>, pageNum: number) => {\n    if (!event.target) {\n      return;\n    }\n    if (pageNum !== null) {\n      setPage(pageNum);\n      setUserLogin({ ...userLoginData, pageForGames: currPage - 1 });\n    }\n  };\n\n  useEffect(() => {\n    const isGameBtnDisabled = words.every(\n      (word) =>\n        word.userWord?.optional?.isDifficult ||\n        word.userWord?.optional?.deleted,\n    );\n    setDisabled(isGameBtnDisabled);\n  }, [words, userLoginData.isLogined]);\n\n  useEffect(() => {\n    setLoading(true);\n    const page = currPage - 1;\n    const userId = `${localStorage.getItem('userId')}`;\n    const token = `${localStorage.getItem('token')}`;\n\n    if (userLoginData.isLogined) {\n      UserAggregatedWordsAPI.getAggregatedUserWords(\n        userId,\n        token,\n        (data: TWord[]) => setWords(data),\n        `${groupLevel}`,\n        `${page}`,\n        WORDS_PER_PAGE,\n        '',\n        () => setLoading(false),\n      );\n    } else {\n      WordsAPI.getWords(\n        page,\n        groupLevel,\n        (data: TWord[]) => setWords(data),\n        () => setLoading(false),\n      );\n    }\n  }, [\n    currPage,\n    location.pathname,\n    groupLevel,\n    userLoginData.isLogined,\n    updatedWord,\n  ]);\n\n  const onSelectCard = useCallback(\n    (wordId) => {\n      const userId = `${localStorage.getItem('userId')}`;\n      const token = `${localStorage.getItem('token')}`;\n      UserWordsAPI.createUserWord(\n        userId,\n        wordId,\n        token,\n        {\n          difficulty: 'difficult',\n          optional: {\n            isDifficult: true,\n            deleted: false,\n            failCounter: 0,\n            successCounter: 0,\n            correctAnswer: 0,\n            group: groupLevel,\n            page: currPage,\n          },\n        },\n        (word) => setUpdatedWord(word),\n      );\n    },\n    [groupLevel, currPage, setUpdatedWord],\n  );\n\n  const onUnSelectCard = useCallback((wordId) => {\n    const userId = `${localStorage.getItem('userId')}`;\n    const token = `${localStorage.getItem('token')}`;\n    UserWordsAPI.deleteUserWord(userId, wordId, token, (word) =>\n      setUpdatedWord(word),\n    );\n  }, []);\n\n  return (\n    <div\n      className={classNames('textbook_page', {\n        'is-studied-page': disabled,\n      })}\n    >\n      <div className=\"textbook_games-button-container\">\n        <span className=\"textbook_games-button-container-title\">\n          Закрепи слова при помощи игр.\n        </span>\n        <TextbookGamesButton\n          disabledBtn={disabled}\n          path={`/games/audio/${groupLevel}`}\n          name=\"Аудиовызов\"\n          className=\"textbook_games-btn\"\n        />\n        <TextbookGamesButton\n          disabledBtn={disabled}\n          path={`/games/sprint/${groupLevel}`}\n          name=\"Спринт\"\n          className=\"textbook_games-btn\"\n        />\n        <TextbookGamesButton\n          path={`/dictionary/${groupLevel}`}\n          name=\"Словарь\"\n          className={classNames('textbook_games-btn', {\n            'is-unauthorized': !userLoginData.isLogined,\n          })}\n        />\n      </div>\n      <section className=\"textbook_section-button\">\n        {Object.values(ENGLISH_LEVELS).map(({ id, code }) => (\n          <EnglishLevelButton\n            path=\"/textbook/words/\"\n            key={id}\n            id={id}\n            code={code}\n            currLevel={groupLevel.toString()}\n          />\n        ))}\n      </section>\n      <div className=\"textbook_words-container\">\n        {loading && <CircularProgress className=\"circular-progress\" />}\n        <WordCardList\n          words={words}\n          group={groupLevel}\n          onSelectCard={onSelectCard}\n          onUnSelectCard={onUnSelectCard}\n          isAuthorized={userLoginData.isLogined}\n        />\n\n        <Pagination\n          count={30}\n          variant=\"outlined\"\n          color=\"primary\"\n          defaultPage={1}\n          onChange={handleChangePage}\n          className=\"textbook_pagination\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TextbookWords;\n","import { CircularProgress } from '@mui/material';\nimport React, { useEffect, useState, useCallback, MouseEvent } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { TWord } from '../../../api/types';\nimport UserAggregatedWordsAPI from '../../../api/userAggregatedWordsAPI';\nimport UserWordsAPI from '../../../api/userWordsAPI';\n\nimport TextbookGamesButton from '../components/TextbookGamesButton/TextbookGamesButton';\n\nimport WordCardList from '../components/WordCardList/WordCardList';\nimport { DICTIONARY_CATEGORIES, WORDS_PER_PAGE } from '../constants/constants';\n\nimport './Dictionary.scss';\n\ntype TDictionaryCategory = keyof typeof DICTIONARY_CATEGORIES;\n\nconst Dictionary = () => {\n  const location = useLocation();\n  const lengthLocation = location.pathname.split('/').length;\n  const groupLevel = +location.pathname.split('/')[lengthLocation - 1];\n  const [words, setWords] = useState<TWord[]>([]);\n  const [currFilter, setCurrFilter] = useState(\n    '{\"userWord.difficulty\":\"difficult\", \"userWord.optional.isDifficult\":true}',\n  );\n  const [currCategory, setCurrCategory] = useState<TDictionaryCategory>('0');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const userId = `${localStorage.getItem('userId')}`;\n    const token = `${localStorage.getItem('token')}`;\n    const group = '';\n    const page = '';\n    const filter = currFilter;\n\n    setLoading(true);\n    UserAggregatedWordsAPI.getAggregatedUserWords(\n      userId,\n      token,\n      (data: TWord[]) => setWords(data),\n      group,\n      page,\n      WORDS_PER_PAGE,\n      filter,\n      () => setLoading(false),\n    );\n  }, [currFilter]);\n\n  const onHandleChangeCategory = useCallback((e: MouseEvent) => {\n    const target = e.currentTarget as HTMLElement;\n    if (!target) {\n      return;\n    }\n    const id = target.id as TDictionaryCategory;\n    const filterRequest = DICTIONARY_CATEGORIES[id].filter;\n    setCurrFilter(filterRequest);\n    setCurrCategory(id);\n  }, []);\n\n  const hasEmptyMessage = words.length === 0 && !loading;\n  const hasWordCards = words.length !== 0 && !loading;\n\n  const onUnSelectCard = useCallback(\n    (wordId) => {\n      const userId = `${localStorage.getItem('userId')}`;\n      const token = `${localStorage.getItem('token')}`;\n      const dataWord = {\n        difficulty: 'difficult',\n        optional: {\n          isDifficult: false,\n          deleted: true,\n          failCounter: 0,\n          successCounter: 0,\n          correctAnswer: 0,\n        },\n      };\n\n      if (currCategory === '0') {\n        UserWordsAPI.deleteUserWord(userId, wordId, token);\n      } else {\n        UserWordsAPI.updateUserWord(userId, token, wordId, dataWord);\n      }\n      setWords(words.filter((word) => word._id !== wordId));\n    },\n    [currCategory, words],\n  );\n\n  const onSelectCard = useCallback(\n    (wordId) => {\n      const userId = `${localStorage.getItem('userId')}`;\n      const token = `${localStorage.getItem('token')}`;\n\n      /*  UsersStatisticAPI.upsetStatistics(userId, token, {\n        learnedWords: 2,\n        optional: {\n          audioCall: {\n            rightAnswers: 2,\n            wrongAnswers: 1,\n          },\n        },\n      });  */\n\n      /*  UsersStatisticAPI.getStatistics(userId, token, (data: TStatistic) =>\n        console.error('ff: ', data),\n      );  */\n\n      if (currCategory === '0') {\n        UserWordsAPI.updateUserWord(userId, token, wordId, {\n          difficulty: 'difficult',\n          optional: {\n            isDifficult: false,\n            deleted: true,\n            failCounter: 0,\n            successCounter: 0,\n            correctAnswer: 0,\n          },\n        });\n      } else {\n        UserWordsAPI.updateUserWord(userId, token, wordId, {\n          difficulty: 'difficult',\n          optional: {\n            isDifficult: true,\n            deleted: false,\n            failCounter: 0,\n            successCounter: 0,\n            correctAnswer: 0,\n          },\n        });\n      }\n      setWords(words.filter((word) => word._id !== wordId));\n    },\n    [currCategory, words],\n  );\n\n  return (\n    <div className=\"dictionary-container\">\n      <div className=\"dictionary_btn-container\" key=\"dictionary_btn\">\n        {Object.values(DICTIONARY_CATEGORIES).map(({ id, name }) => (\n          <TextbookGamesButton\n            id={id}\n            path={`/dictionary/${groupLevel}`}\n            key={id}\n            name={name}\n            className={classNames('dictionary_btn', {\n              'dictionary_active-btn': id === currCategory,\n            })}\n            onClick={onHandleChangeCategory}\n          />\n        ))}\n      </div>\n      <div className=\"words_list-container\" key=\"words_list-container\">\n        {loading && <CircularProgress className=\"circular-progress\" />}\n        {hasWordCards && (\n          <WordCardList\n            key=\"dictionary_word-list\"\n            words={words}\n            onSelectCard={onSelectCard}\n            onUnSelectCard={onUnSelectCard}\n            currCategory={currCategory}\n          />\n        )}\n        {hasEmptyMessage && (\n          <p className=\"dictionary-message\">\n            {DICTIONARY_CATEGORIES[currCategory].message}\n          </p>\n        )}\n      </div>\n      <div className=\"dictionary_btn-container\" key=\"dictionary_games-btn\">\n        <span className=\"dictionary_games-button-title\">\n          Закрепи слова при помощи игр.\n        </span>\n        <TextbookGamesButton\n          path=\"/games/audio/\"\n          name=\"Аудиовызов\"\n          className=\"dictionary_games-btn\"\n        />\n        <TextbookGamesButton\n          path=\"/games/sprint/\"\n          name=\"Спринт\"\n          className=\"dictionary_games-btn\"\n        />\n        <TextbookGamesButton\n          path={`/textbook/words/${groupLevel}`}\n          name=\"Учебник\"\n          className=\"dictionary_games-btn\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dictionary;\n","import Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\n\nconst Team = () => {\n  return (\n    <div className=\"App-team\">\n      <div className=\"team-container\">\n        <Card sx={{ maxWidth: 400 }} className=\"team-card\">\n          <CardActionArea>\n            <img\n              className=\"team-img_static\"\n              src=\"./assets/img/2GU.jpg\"\n              alt=\"\"\n              width={400}\n              height={400}\n            />\n            <img\n              className=\"team-img_active\"\n              src=\"./assets/gif/2GU.gif\"\n              alt=\"\"\n              width={400}\n              height={400}\n            />\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"div\"\n                className=\"team-text\"\n              >\n                Андрей Кожаненко\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                component=\"div\"\n                className=\"team-text\"\n              >\n                Team lead\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                className=\"team-text\"\n              >\n                Координировал команду\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              href=\"https://github.com/treyer\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"team-button\"\n            >\n              GitHub\n            </Button>\n          </CardActions>\n        </Card>\n        <Card sx={{ maxWidth: 400 }} className=\"team-card\">\n          <CardActionArea>\n            <img\n              className=\"team-img_static\"\n              src=\"./assets/img/Ao.jpg\"\n              alt=\"\"\n              width={400}\n              height={400}\n            />\n            <img\n              className=\"team-img_active\"\n              src=\"./assets/gif/Ao.gif\"\n              alt=\"\"\n              width={400}\n              height={400}\n            />\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"div\"\n                className=\"team-text\"\n              >\n                Марина Пресмыцкая\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                component=\"div\"\n                className=\"team-text\"\n              >\n                Developer\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                className=\"team-text\"\n              >\n                Настроила Бекенд\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              href=\"https://github.com/MarinaPresmytskaia\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"team-button\"\n            >\n              GitHub\n            </Button>\n          </CardActions>\n        </Card>\n        <Card sx={{ maxWidth: 400 }} className=\"team-card\">\n          <CardActionArea>\n            <img\n              className=\"team-img_static\"\n              src=\"./assets/img/KHO.jpg\"\n              alt=\"\"\n              width={400}\n              height={400}\n            />\n            <img\n              className=\"team-img_active\"\n              src=\"./assets/gif/KHO.gif\"\n              alt=\"\"\n              width={400}\n              height={400}\n            />\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"div\"\n                className=\"team-text\"\n              >\n                Виктория Тимахович\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                component=\"div\"\n                className=\"team-text\"\n              >\n                Developer\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                className=\"team-text\"\n              >\n                Стартовая верстка.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              href=\"https://github.com/vikysan77\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"team-button\"\n            >\n              GitHub\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Team;\n","import { MouseEvent, useCallback, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport EnglishLevelButton from '../../../Components/EnglishLevelButton/EnglishLevelButton';\nimport { ENGLISH_LEVELS } from '../../../General/constants';\nimport './GameSprint.scss';\n\ntype TGameId = keyof typeof ENGLISH_LEVELS;\n\nconst GameSprint = () => {\n  const [activeGameId, setActiveGameId] = useState<TGameId>(0);\n\n  const handleGameLevel = useCallback(\n    (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n      if (!target) {\n        return;\n      }\n      const activeId = activeGameId as TGameId;\n      setActiveGameId(activeId);\n    },\n    [activeGameId],\n  );\n\n  return (\n    <div className=\"App-sprint\">\n      <Typography variant=\"h3\" className=\"sprint_level-title\">\n        Выберите уровень сложности.\n      </Typography>\n      <div className=\"sprint_levels-list\">\n        <section className=\"sprint_level-list-section-button\">\n          {Object.values(ENGLISH_LEVELS).map(({ id, code }) => (\n            <EnglishLevelButton\n              path=\"/games/sprint/\"\n              key={id}\n              id={id}\n              code={code}\n              level=\"\"\n              onHover={handleGameLevel}\n            />\n          ))}\n        </section>\n      </div>\n      <Typography variant=\"h4\" className=\"sprint_level-title-control\">\n        <p>Используйте мышь, чтобы выбрать.</p>\n        <p>Используйте клавиши влево или вправо.</p>\n      </Typography>\n    </div>\n  );\n};\n\nexport default GameSprint;\n","import { MouseEvent, useCallback, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { ENGLISH_LEVELS } from '../../General/constants';\nimport EnglishLevelButton from '../EnglishLevelButton/EnglishLevelButton';\nimport './GameAudio.scss';\n\ntype TGameId = keyof typeof ENGLISH_LEVELS;\n\nconst GameAudio = () => {\n  const [activeGameId, setActiveGameId] = useState<TGameId>(0);\n\n  const handleGameLevel = useCallback(\n    (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n      if (!target) {\n        return;\n      }\n      const activeId = activeGameId as TGameId;\n      setActiveGameId(activeId);\n    },\n    [activeGameId],\n  );\n\n  return (\n    <div className=\"App-audio\">\n      <Typography variant=\"h3\" className=\"audio_level-title\">\n        Выберите уровень сложности.\n      </Typography>\n      <div className=\"audio_levels-list\">\n        <section className=\"audio_level-list-section-button\">\n          {Object.values(ENGLISH_LEVELS).map(({ id, code }) => (\n            <EnglishLevelButton\n              path=\"/games/audio/\"\n              key={id}\n              id={id}\n              code={code}\n              level=\"\"\n              onHover={handleGameLevel}\n            />\n          ))}\n        </section>\n      </div>\n      <Typography variant=\"h4\" className=\"audio_level-title-control\">\n        <p>Используйте мышь, чтобы выбрать.</p>\n        <p>Используйте цифровые клавиши от 1 до 5 для выбора ответа</p>\n        <p>Используйте пробел для повтроного звучания слова</p>\n      </Typography>\n    </div>\n  );\n};\n\nexport default GameAudio;\n","import { useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport { TTime } from '../../../../../General/types';\nimport './timer.scss';\n\nconst Timer = ({ time, isSound, isPlay }: TTime) => {\n  useEffect(() => {\n    if (isSound && isPlay) {\n      if (time !== 0) {\n        const soundTick = new Audio('/assets/audio/tick-sound.mp3');\n        soundTick.play();\n      } else {\n        const soundEnd = new Audio('/assets/audio/round-end-sound.mp3');\n        soundEnd.play();\n      }\n    }\n  }, [time, isSound, isPlay]);\n\n  const getStyle = (): string => {\n    if (time === 0) return 'circle10';\n    if (time >= 1 && time < 7) return 'circle9';\n    if (time >= 7 && time < 13) return 'circle8';\n    if (time >= 13 && time < 19) return 'circle7';\n    if (time >= 19 && time < 25) return 'circle6';\n    if (time >= 25 && time < 31) return 'circle5';\n    if (time >= 31 && time < 37) return 'circle4';\n    if (time >= 37 && time < 43) return 'circle3';\n    if (time >= 43 && time < 49) return 'circle2';\n    if (time >= 49 && time < 54) return 'circle1';\n    return 'circle0';\n  };\n\n  return (\n    <div className={`circle ${getStyle()}`}>\n      <div className=\"timer-number\">\n        <Typography variant=\"h3\">{time}</Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import { useState, useEffect } from 'react';\nimport { TCorrectAnsCount } from '../../../../../General/types';\n\nimport './parrots.scss';\n\nconst Parrots = ({ correctAnswersCount }: TCorrectAnsCount) => {\n  const [displayParrot2, setDisplayParrot2] = useState(false);\n  const [displayParrot3, setDisplayParrot3] = useState(false);\n  const [displayParrot4, setDisplayParrot4] = useState(false);\n\n  useEffect(() => {\n    if (correctAnswersCount >= 4) {\n      setDisplayParrot2(true);\n    }\n    if (correctAnswersCount >= 8) {\n      setDisplayParrot3(true);\n    }\n    if (correctAnswersCount >= 12) {\n      setDisplayParrot4(true);\n    }\n  }, [correctAnswersCount]);\n\n  return (\n    <div className=\"parrots-wrapper\">\n      <div\n        className=\"branch\"\n        style={{\n          backgroundImage: `url(/assets/img/branch.png)`,\n        }}\n      />\n      <div\n        className=\"parrot-1\"\n        style={{\n          backgroundImage: `url(/assets/img/parrot-1.png)`,\n        }}\n      />\n      {displayParrot2 && (\n        <div\n          className=\"parrot-2\"\n          style={{\n            backgroundImage: `url(/assets/img/parrot-2.png)`,\n          }}\n        />\n      )}\n      {displayParrot3 && (\n        <div\n          className=\"parrot-3\"\n          style={{\n            backgroundImage: `url(/assets/img/parrot-3.png)`,\n          }}\n        />\n      )}\n      {displayParrot4 && (\n        <div\n          className=\"parrot-4\"\n          style={{\n            backgroundImage: `url(/assets/img/parrot-4.png)`,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Parrots;\n","import { TTickStatus } from '../../../../../General/types';\n\nconst Tick = ({ status }: TTickStatus) => {\n  return (\n    <div\n      className=\"tick\"\n      style={{\n        backgroundImage: `url(/assets/img/${status ? 'tick' : 'no-tick'}.png)`,\n        backgroundSize: '30px 30px',\n        width: '30px',\n        height: '30px',\n      }}\n    />\n  );\n};\n\nexport default Tick;\n","import { useState, useEffect } from 'react';\nimport { TCorrectAnsCount } from '../../../../../General/types';\nimport Tick from '../Tick/tick';\nimport './tick-pannel.scss';\n\nconst TickPannel = ({ correctAnswersCount }: TCorrectAnsCount) => {\n  const [statusTick1, setStatusTick1] = useState(false);\n  const [statusTick2, setStatusTick2] = useState(false);\n  const [statusTick3, setStatusTick3] = useState(false);\n\n  useEffect(() => {\n    if (\n      correctAnswersCount === 4 ||\n      correctAnswersCount === 8 ||\n      correctAnswersCount === 0\n    ) {\n      setStatusTick1(false);\n    } else {\n      setStatusTick1(true);\n    }\n\n    if (\n      correctAnswersCount === 2 ||\n      correctAnswersCount === 3 ||\n      correctAnswersCount === 6 ||\n      correctAnswersCount === 7 ||\n      correctAnswersCount >= 10\n    ) {\n      setStatusTick2(true);\n    } else {\n      setStatusTick2(false);\n    }\n\n    if (\n      correctAnswersCount === 3 ||\n      correctAnswersCount === 7 ||\n      correctAnswersCount >= 11\n    ) {\n      setStatusTick3(true);\n    } else {\n      setStatusTick3(false);\n    }\n  }, [correctAnswersCount]);\n\n  return (\n    <div\n      className=\"tick-wrapper\"\n      style={{\n        justifyContent: `${\n          correctAnswersCount >= 12 ? 'center' : 'space-between'\n        }`,\n      }}\n    >\n      {correctAnswersCount < 12 && <Tick status={statusTick1} />}\n      <Tick status={statusTick2} />\n      {correctAnswersCount < 12 && <Tick status={statusTick3} />}\n    </div>\n  );\n};\n\nexport default TickPannel;\n","import { useEffect, useState } from 'react';\nimport { Button, Typography } from '@mui/material';\n\nimport Timer from './Timer/timer';\nimport Parrots from './Parrots/parrots';\nimport TickPannel from './TickPannel/tick-pannel';\n\nconst GameSprintLevel = () => {\n  const [time, setTime] = useState(60);\n  const [isSound, setIsSound] = useState(true);\n  const [isPlay, setIsPlay] = useState(false);\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n\n  useEffect(() => {\n    if (isPlay) {\n      setTimeout(() => {\n        if (time !== 0) setTime((prev) => prev - 1);\n      }, 1000);\n    }\n  }, [time, isPlay]);\n\n  const handlePlay = () => {\n    setIsPlay(true);\n  };\n\n  const handleIsSound = () => {\n    setIsSound(!isSound);\n  };\n\n  const increaseCorrectCount = () => {\n    setCorrectAnswersCount((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"App-games\">\n      <div className=\"sprint-game-container\">\n        <div className=\"sprint-game-inner\">\n          <div className=\"timer-wrapper\">\n            <Timer time={time} isSound={isSound} isPlay={isPlay} />\n            <Typography>280</Typography>\n          </div>\n          <Button variant=\"contained\" onClick={handlePlay}>\n            Играть\n          </Button>\n          <Button variant=\"contained\" onClick={handleIsSound}>\n            {isSound ? 'выключить звук' : 'включить звук'}\n          </Button>\n          <Button variant=\"contained\" onClick={increaseCorrectCount}>\n            Увеличить число ответов\n          </Button>\n          <Parrots correctAnswersCount={correctAnswersCount} />\n          <TickPannel correctAnswersCount={correctAnswersCount} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameSprintLevel;\n","import { TQuestion } from '../Context/audio-context';\n\nexport const shuffleAnswers = (question: TQuestion) => {\n  const unshuffledAnswers = [\n    question.correctAnswer,\n    ...question.incorrectAnswers,\n  ];\n  return unshuffledAnswers.sort(() => {\n    return Math.random() - 0.5;\n  });\n};\n\nexport type TBackendQuestion = {\n  audio: string;\n  audioExample: string;\n  audioMeaning: string;\n  group: number;\n  id: string;\n  image: string;\n  page: number;\n  textExample: string;\n  textExampleTranslate: string;\n  textMeaning: string;\n  textMeaningTranslate: string;\n  transcription: string;\n  word: string;\n  wordTranslate: string;\n};\n\nexport const normalQuestions = (backendQuestions: TBackendQuestion[]) => {\n  return backendQuestions\n    .sort(() => {\n      return Math.random() - 0.5;\n    })\n    .map((backendQuestion, index) => {\n      const incorrectAnswers: string[] = [];\n      for (let i = 0; i < 4; i += 1) {\n        const idx = Math.round(Math.random() * 19);\n        if (\n          idx !== index &&\n          !incorrectAnswers.includes(backendQuestions[idx].wordTranslate)\n        ) {\n          incorrectAnswers.push(backendQuestions[idx].wordTranslate);\n        } else {\n          i -= 1;\n        }\n      }\n      return {\n        correctAnswer: backendQuestion.wordTranslate,\n        question: backendQuestion.audio,\n        incorrectAnswers,\n      };\n    });\n};\n","import React, { FC, useReducer } from 'react';\nimport {\n  normalQuestions,\n  shuffleAnswers,\n  TBackendQuestion,\n} from '../General/Function-helpers';\n\nexport type TAppState = {\n  state: TReducerState;\n  dispatch: React.Dispatch<TReducerAction>;\n};\n\nconst initialState: TReducerState = {\n  questions: [],\n  currentQuestionIndex: 0,\n  showResults: false,\n  answers: [],\n  currentAnswer: '',\n  correctAnswerCount: 0,\n};\n\nexport type TQuestion = {\n  question: string;\n  correctAnswer: string;\n  incorrectAnswers: string[];\n};\n\nexport type TReducerState = {\n  questions: TQuestion[];\n  currentQuestionIndex: number;\n  showResults: boolean;\n  answers: string[];\n  currentAnswer: string;\n  correctAnswerCount: number;\n};\n\ntype TReducerAction =\n  | {\n      type: 'SELECT_ANSWER';\n      payload: string;\n    }\n  | { type: 'NEXT_QUESTION'; payload: string }\n  | { type: 'RESTART'; payload: string }\n  | { type: 'LOADING_BASE'; payload: TBackendQuestion[] };\n\nconst reducer = (state: TReducerState, action: TReducerAction) => {\n  switch (action.type) {\n    case 'SELECT_ANSWER': {\n      const correctAnswerCount =\n        action.payload ===\n        state.questions[state.currentQuestionIndex].correctAnswer\n          ? state.correctAnswerCount + 1\n          : state.correctAnswerCount;\n      return {\n        ...state,\n        currentAnswer: action.payload,\n        correctAnswerCount,\n      };\n    }\n    case 'NEXT_QUESTION': {\n      const showResults =\n        state.currentQuestionIndex === state.questions.length - 1;\n      const currentQuestionIndex = showResults\n        ? state.currentQuestionIndex\n        : state.currentQuestionIndex + 1;\n      const answers = showResults\n        ? []\n        : shuffleAnswers(state.questions[currentQuestionIndex]);\n      return {\n        ...state,\n        currentQuestionIndex,\n        showResults,\n        answers,\n        currentAnswer: '',\n      };\n    }\n    case 'RESTART': {\n      return initialState;\n    }\n    case 'LOADING_BASE': {\n      const normalBase = normalQuestions(action.payload);\n      return {\n        ...state,\n        questions: normalBase,\n        answers: shuffleAnswers(normalBase[0]),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const AppContext = React.createContext<TAppState>({\n  state: initialState,\n  dispatch: () => {},\n});\n\nexport const AppProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <AppContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","type TAnswer = {\n  answerText: string;\n  index: number;\n  correctAnswer: string;\n  currentAnswer: string;\n  onSelectAnswer: (answerText: string) => void;\n};\n\nconst Answer = ({\n  answerText,\n  index,\n  correctAnswer,\n  currentAnswer,\n  onSelectAnswer,\n}: TAnswer) => {\n  const numberMap = ['1', '2', '3', '4', '5'];\n  const isCorrectAnswer = currentAnswer && answerText === correctAnswer;\n  const isWrongAnswer =\n    currentAnswer === answerText && currentAnswer !== correctAnswer;\n  const correctAnswerClass = isCorrectAnswer ? 'correct-answer' : '';\n  const wrongAnswerClass = isWrongAnswer ? 'wrong-answer' : '';\n  const disabledClass = currentAnswer ? 'disabled-answer' : '';\n\n  return (\n    <div\n      className={`audio-answer ${correctAnswerClass} ${wrongAnswerClass} ${disabledClass}`}\n      onClick={() => onSelectAnswer(answerText)}\n    >\n      <div className=\"audio-answer_number\">{numberMap[index]}</div>\n      <div className=\"audio-answer_text\">{answerText}</div>\n    </div>\n  );\n};\n\nexport default Answer;\n","import { CardActions, IconButton } from '@mui/material';\nimport * as React from 'react';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport { AppContext } from '../../Context/audio-context';\nimport { SERVER_URL } from '../../consts';\nimport Answer from '../GameAudioAnswer/Answer';\n\nconst Question = () => {\n  const { state, dispatch } = React.useContext(AppContext);\n  const { currentQuestionIndex, questions, currentAnswer } = state;\n  const currentQuestion = questions[currentQuestionIndex];\n  return (\n    <>\n      <div className=\"audio-question\">\n        <CardActions>\n          <IconButton\n            className=\"audio-element\"\n            aria-label=\"volume\"\n            onClick={() => {\n              const audio = new Audio();\n              audio.src = `${SERVER_URL}/${currentQuestion.question}`;\n              audio.play();\n            }}\n          >\n            <VolumeUpIcon className=\"audio-element_icon\" />\n          </IconButton>\n        </CardActions>\n      </div>\n      <div className=\"audio-answers\">\n        {state.answers.map((answer, index: number) => (\n          <Answer\n            key={answer}\n            index={index}\n            answerText={answer}\n            correctAnswer={currentQuestion.correctAnswer}\n            currentAnswer={currentAnswer}\n            onSelectAnswer={(answerText: string) =>\n              dispatch({ type: 'SELECT_ANSWER', payload: answerText })\n            }\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Question;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TWord } from '../../api/types';\nimport { AppContext } from '../../Context/audio-context';\nimport Question from '../GameAudioQuestion/Question';\nimport WordsAPI from '../../api/wordsAPI';\nimport './GameAudioLevel.scss';\n\nconst GameAudioLevel = () => {\n  const location = useLocation();\n  const lengthLocation = location.pathname.split('/').length;\n  const groupLevel = +location.pathname.split('/')[lengthLocation - 1];\n  const [currPage] = useState(1);\n  const { state, dispatch } = React.useContext(AppContext);\n  const { currentQuestionIndex, questions, correctAnswerCount, showResults } =\n    state;\n  const scoreQuestion = currentQuestionIndex + 1;\n  const allQuestions = questions.length;\n  useEffect(() => {\n    const page = currPage - 1;\n    WordsAPI.getWords(page, groupLevel, (data: TWord[]) =>\n      dispatch({ type: 'LOADING_BASE', payload: data }),\n    );\n  }, [currPage, location.pathname, groupLevel, dispatch]);\n\n  return (\n    <div className=\"App-games\">\n      <div className=\"games-container\">\n        <div className=\"game-audio_quiz\">\n          {state.showResults && (\n            <div className=\"game-audio_results\">\n              <div className=\"results-congratulations\">Результаты</div>\n              <div className=\"results-info\">\n                <h4>Вы закончили игру с результатом:</h4>\n                <p>\n                  правильныx ответов {correctAnswerCount} из {questions.length}\n                </p>\n              </div>\n              <div\n                className=\"audio-restart_button\"\n                onClick={() => dispatch({ type: 'RESTART', payload: '' })}\n              >\n                Начать заново.\n              </div>\n            </div>\n          )}\n          {!showResults && questions.length > 0 && (\n            <div>\n              <div className=\"audio-game_score\">\n                {scoreQuestion} / {allQuestions}\n              </div>\n              <Question />\n              <div\n                className=\"audio-btn_next\"\n                onClick={() => {\n                  dispatch({ type: 'NEXT_QUESTION', payload: '' });\n                }}\n              >\n                Next\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameAudioLevel;\n","import Games from '../pages/games/games';\nimport Main from '../pages/main/main';\nimport Statistics from '../pages/statistics/statistics';\nimport TextbookEnglishLevels from '../pages/textbook/TextbookEnglishLevels/TextbookEnglishLevels';\nimport TextbookWords from '../pages/textbook/TextbookWords/TextbookWords';\nimport Dictionary from '../pages/textbook/Dictionary/Dictionary';\nimport Team from '../pages/team/team';\n\nimport { TPath } from './types';\nimport GameSprint from '../pages/games/GameSprint/GameSprint';\nimport GameAudio from '../Components/GameAudio/GameAudio';\nimport GameSprintLevel from '../pages/games/GameSprint/GameSprintLevel/GameSprintLevel';\nimport GameAudioLevel from '../Components/GameAudioLevel/GameAudioLevel';\n\nexport const ROUTES: TPath[] = [\n  { id: 1, routePath: '/', title: 'Главная', element: <Main /> },\n  { id: 2, routePath: '/games', title: 'Мини-игры', element: <Games /> },\n  {\n    id: 3,\n    routePath: '/textbook',\n    title: 'Учебник',\n    element: <TextbookEnglishLevels />,\n  },\n  {\n    id: 4,\n    routePath: '/textbook/words/:id',\n    title: 'Учебник',\n    element: <TextbookWords />,\n  },\n  {\n    id: 5,\n    routePath: '/statistics',\n    title: 'Статистика',\n    element: <Statistics />,\n  },\n  {\n    id: 6,\n    routePath: '/team',\n    title: 'О команде',\n    element: <Team />,\n  },\n  {\n    id: 7,\n    routePath: '/games/sprint',\n    title: 'Мини-игры',\n    element: <GameSprint />,\n  },\n  {\n    id: 8,\n    routePath: '/games/audio',\n    title: 'Мини-игры',\n    element: <GameAudio />,\n  },\n  {\n    id: 9,\n    routePath: '/games/sprint/:id',\n    title: 'Мини-игры',\n    element: <GameSprintLevel />,\n  },\n  {\n    id: 10,\n    routePath: '/games/audio/:id',\n    title: 'Мини-игры',\n    element: <GameAudioLevel />,\n  },\n  {\n    id: 11,\n    routePath: '/dictionary/:id',\n    title: 'Словарь',\n    element: <Dictionary />,\n  },\n];\n\nconst ROUTES_IN_NAV = [1, 2, 3, 5, 6];\n\nexport const Sections = ROUTES.filter((route) =>\n  ROUTES_IN_NAV.includes(route.id),\n);\n\nexport const ENGLISH_LEVELS = {\n  0: {\n    id: '0',\n    code: 'A1',\n    level: 'Elementary',\n    img: '/assets/img/elementary.jpg',\n    text: 'На этом уровне вы можете понимать и использовать знакомые повседневные выражения и простейшие фразы, направленные на решение конкретных задач. Представиться, представить других лиц, задавать простые вопросы личного характера, например «Где вы живете?», «Откуда вы?», уметь отвечать на такие вопросы. Поддерживать простейшую беседу, если собеседник говорит медленно, отчетливо и помогает вам.',\n  },\n  1: {\n    id: '1',\n    code: 'A2',\n    level: 'Pre-Intermediate',\n    img: '/assets/img/pre-intermediate.jpg',\n    text: 'На этом уровне вы можете понимать употребительные выражения на общие темы, такие как: семья, покупки, работа и др. Разговаривать на простые повседневные темы, выражаясь простыми фразами. Рассказать простыми выражениями о себе, описывать простые ситуации. Телепередачи на английском не будут понятны, разве что отдельные слова, но собеседника, если он будет говорить отчетливо, простыми фразами в 2-3 слова в общем поймете.Уровень Pre-Intermediate можно назвать «уровнем для выживания», Survival English. Его достаточно для того, чтобы «выжить» во время поездки в страну, где основной язык английский.',\n  },\n  2: {\n    id: '2',\n    code: 'B1',\n    level: 'Intermediate',\n    img: '/assets/img/upper-intermediate.jpg',\n    text: 'Словарного запаса и знаний грамматики достаточно, чтобы писать простые сочинения о себе, описывать случаи из жизни, написать письмо другу. Но в большинстве случаев устная речь отстает от письменной, вы путаете времена, думаете над фразой, делаете паузу, чтобы подобрать предлог (to или for?), но общаться более-менее можете, особенно если нет стеснительности или боязни ошибиться. Вы в общем понимаете фильмы и сериалы с субтитрами, если текст не очень сложный, и с некоторыми затруднениями понимаете общий смысл без субтитров.',\n  },\n  3: {\n    id: '3',\n    code: 'B2',\n    level: 'Upper-Intermediate',\n    img: '/assets/img/intermediate.jpg',\n    text: 'Upper Intermediate – это уже хорошее, добротное, уверенное владение языком. Часто уровня Intermediate – Upper Intermediate хватает для многих задач. Например, нередко эмигранты владеют языком на этом уровне, и им этого хватает, чтобы жить и работать в англоязычной стране. Дойдя до этого уровня, многие забрасывают занятия на курсах, с репетитором и совершенствуют языковые навыки только с помощью практики.',\n  },\n  4: {\n    id: '4',\n    code: 'C1',\n    level: 'Advanced',\n    img: '/assets/img/advanced.jpg',\n    text: 'Отличный уровень. Если вы общаетесь на понятные вам темы, вас могут принять за носителя языка. Вы свободно переписываетесь на английском, можете написать тексты разных жанров, используя стилистические приемы, изобразительно-выразительные средства языка. Вы понимаете на слух речь практически все, что слышите, за исключением сложных специальных моментов, без проблем смотрите фильмы, телепередачи.',\n  },\n  5: {\n    id: '5',\n    code: 'C2',\n    level: 'Proficiency',\n    img: '/assets/img/proficiency.jpg',\n    text: 'Уровень образованного носителя языка. Вы понимаете практически все, можете в любой форме выразить любую мысль, используя тонкости языка. Иностранца в вас может выдать незнание культурных особенностей страны. К примеру, вы не поймете шутки из какого-нибудь телешоу 90-х, отсылку к популярной песне. Чтобы дойти до Proficiency желательно жить в англоязычной стране, постоянно общаться на английском языке и при этом сознательно и регулярно совершенствовать знание языка: много читать, писать, изучать разные тонкости.',\n  },\n};\n","const Footer = () => {\n  return (\n    <div className=\"App-footer\">\n      <div className=\"footer-container\">\n        <div className=\"footer-data\">\n          <p className=\"copyright\">©</p>\n          <p className=\"year\">2022</p>\n          <a\n            className=\"github-username\"\n            href=\"https://github.com/treyer\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Andrei Kazhanenka\n          </a>\n          <a\n            className=\"github-username\"\n            href=\"https://github.com/MarinaPresmytskaia\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Marina Presmytskaia\n          </a>\n          <a\n            className=\"github-username\"\n            href=\"https://github.com/vikysan77\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Viktoria Tsimakhovich\n          </a>\n        </div>\n        <a\n          aria-label=\"Link\"\n          className=\"rss-logo\"\n          href=\"https://rs.school/index.html\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          style={{\n            backgroundImage: `url(./assets/svg/rss.svg)`,\n          }}\n        >\n          {' '}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { BaseAPI } from './baseAPI';\nimport { TAuth, TUser, TUserBase } from './types';\nimport { USERS_API_ERRORS } from './errors';\n\nclass UsersAPI extends BaseAPI {\n  createUser(\n    dataUser: TUser,\n    createNewUserCb: (error: string | null, data?: TUser) => void,\n  ) {\n    this.post('users', dataUser)\n      .then((result) => {\n        BaseAPI.handleError(result, USERS_API_ERRORS);\n        return result.json();\n      })\n      .then((newUser) => createNewUserCb(null, newUser))\n      .catch((error) => createNewUserCb(error.message));\n  }\n\n  getUser(userId: string, token: string, getUserCb: (data: TUser) => void) {\n    this.get(`users/${userId}`, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USERS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => getUserCb(result))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  loginUser(\n    dataLogin: TUserBase,\n    loginUserCb: (error: string | null, data?: TAuth) => void,\n  ) {\n    this.post('signin', dataLogin)\n      .then((result) => {\n        BaseAPI.handleError(result, USERS_API_ERRORS);\n        return result.json();\n      })\n      .then((data) => loginUserCb(null, data))\n      .catch((error) => {\n        loginUserCb(error.message);\n      });\n  }\n\n  updateUser(\n    userId: string,\n    token: string,\n    dataUser: TUser,\n    updateUserCb: (data: TUser) => void,\n  ) {\n    this.put(`users/${userId}`, dataUser, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USERS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => updateUserCb(result))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  deleteUser(\n    userId: string,\n    token: string,\n    deleteUserCb: (id: string) => void,\n  ) {\n    this.delete(`users/${userId}`, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USERS_API_ERRORS);\n      })\n      .then(() => deleteUserCb(userId))\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  getNewUserToken(\n    userId: string,\n    token: string,\n    getNewUserTokenCb: (errorMessage: string | null, dataToken?: TAuth) => void,\n  ) {\n    this.get(`users/${userId}/tokens`, {\n      Authorization: `Bearer ${token}`,\n    })\n      .then((result) => {\n        BaseAPI.handleError(result, USERS_API_ERRORS);\n        return result.json();\n      })\n      .then((result) => getNewUserTokenCb(null, result))\n      .catch((error) => {\n        getNewUserTokenCb(error.message);\n      });\n  }\n}\n\nexport default new UsersAPI();\n","import { isEmail } from 'validator';\nimport { Typography } from '@mui/material';\n\nexport const required = (value: string) => {\n  if (!value.trim()) {\n    return (\n      <Typography variant=\"body1\" style={{ color: 'red' }}>\n        Поле обязательно для заполнения\n      </Typography>\n    );\n  }\n  return '';\n};\n\nexport const validEmail = (value: string) => {\n  if (!isEmail(value)) {\n    return (\n      <Typography variant=\"body1\" style={{ color: 'red' }}>\n        Email не валиден\n      </Typography>\n    );\n  }\n  return '';\n};\n\nexport const validUsername = (value: string) => {\n  if (value.length < 3 || value.length > 16) {\n    return (\n      <Typography variant=\"body1\" style={{ color: 'red' }}>\n        Имя пользователя должно содержать от 3 до 15 символов\n      </Typography>\n    );\n  }\n  return '';\n};\n\nexport const validPassword = (value: string) => {\n  if (value.length < 8 || value.length > 16) {\n    return (\n      <Typography variant=\"body1\" style={{ color: 'red' }}>\n        Пароль должен содержать от 8 до 15 символов\n      </Typography>\n    );\n  }\n  return '';\n};\n\nexport const setUserLoginToLocalStorage = (\n  token: string,\n  refreshToken: string,\n  userId: string,\n  userName: string | null,\n) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('refreshToken', refreshToken);\n  localStorage.setItem('userId', userId);\n  localStorage.setItem('userName', String(userName));\n};\n\nexport const clearUserLoginInLocalStorage = () => {\n  localStorage.setItem('token', '');\n  localStorage.setItem('refreshToken', '');\n  localStorage.setItem('userId', '');\n  localStorage.setItem('userName', '');\n};\n","import { useState, useRef } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { CardContent, Avatar, Button, Typography } from '@mui/material';\n\nimport UsersAPI from '../../api/usersAPI';\nimport {\n  required,\n  validEmail,\n  validUsername,\n  validPassword,\n} from '../../General/utils';\n\nimport './register.scss';\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [message, setMessage] = useState('');\n  const [submitBtnState, setSubmitBtnState] = useState(false);\n  const form = useRef<HTMLFormElement>();\n  const checkBtn = useRef<HTMLFormElement>();\n\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername((e.target as HTMLInputElement).value);\n    setMessage('');\n  };\n\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail((e.target as HTMLInputElement).value);\n    setMessage('');\n  };\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword((e.target as HTMLInputElement).value);\n    setMessage('');\n  };\n\n  const handleRegister = (e: Event) => {\n    e.preventDefault();\n    setMessage('');\n    setIsSuccess(false);\n    if (form.current && checkBtn.current) {\n      form.current.validateAll();\n      if (checkBtn.current.context._errors.length === 0) {\n        setSubmitBtnState(true);\n        UsersAPI.createUser(\n          { name: username, email, password },\n          (errorMessage, data) => {\n            if (errorMessage) {\n              setMessage(errorMessage);\n              setIsSuccess(false);\n              setSubmitBtnState(false);\n            } else {\n              setMessage(`Пользователь ${data?.name} зарегистрирован`);\n              setIsSuccess(true);\n            }\n          },\n        );\n      }\n    }\n  };\n\n  const handleFormReset = () => {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setIsSuccess(false);\n    setMessage('');\n    setSubmitBtnState(false);\n  };\n\n  return (\n    <div className=\"register-form-wrapper\">\n      <div className=\"card card-container\">\n        {!isSuccess && (\n          <Avatar\n            sx={{ width: 90, height: 90 }}\n            style={{ margin: '10px auto 0' }}\n            src=\"/assets/img/user-add.png\"\n            alt=\"Register user\"\n          />\n        )}\n        {isSuccess && (\n          <Avatar\n            sx={{ width: 90, height: 90 }}\n            style={{ margin: '10px auto 0' }}\n            src=\"/assets/img/user-added-logined.png\"\n            alt=\"User registered\"\n          />\n        )}\n        <CardContent>\n          <Form onSubmit={handleRegister} ref={form}>\n            {!isSuccess && (\n              <div>\n                <div className=\"form-group\">\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      textAlign: 'left',\n                      marginLeft: '5px',\n                      marginBottom: '-10px',\n                    }}\n                  >\n                    имя:\n                  </Typography>\n                  <Input\n                    id=\"username\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={username}\n                    onChange={handleUsernameChange}\n                    validations={[required, validUsername]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      textAlign: 'left',\n                      marginLeft: '5px',\n                      marginBottom: '-10px',\n                    }}\n                  >\n                    email:\n                  </Typography>\n                  <Input\n                    id=\"email\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleEmailChange}\n                    validations={[required, validEmail]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      textAlign: 'left',\n                      marginLeft: '5px',\n                      marginBottom: '-10px',\n                    }}\n                  >\n                    пароль:\n                  </Typography>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                    validations={[required, validPassword]}\n                  />\n                </div>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  disabled={submitBtnState}\n                  style={{ marginTop: '10px' }}\n                >\n                  Зарегистрироваться\n                </Button>\n              </div>\n            )}\n            {message && (\n              <div className=\"form-group\">\n                {isSuccess && (\n                  <Typography variant=\"body1\" style={{ color: 'green' }}>\n                    {message}\n                  </Typography>\n                )}\n                {isSuccess && (\n                  <Button variant=\"contained\" onClick={handleFormReset}>\n                    Зарегистрировать заново\n                  </Button>\n                )}\n                {!isSuccess && (\n                  <Typography variant=\"body1\" style={{ color: 'red' }}>\n                    {message}\n                  </Typography>\n                )}\n              </div>\n            )}\n            <CheckButton style={{ display: 'none' }} ref={checkBtn} />\n          </Form>\n        </CardContent>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import { useState, useRef, useContext } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { CardContent, Avatar, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nimport UsersAPI from '../../api/usersAPI';\nimport {\n  clearUserLoginInLocalStorage,\n  required,\n  setUserLoginToLocalStorage,\n  validEmail,\n  validPassword,\n} from '../../General/utils';\nimport { LoginContext } from '../../Context/login-context';\n\nimport './login.scss';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [message, setMessage] = useState('');\n  const [submitBtnState, setSubmitBtnState] = useState(false);\n  const form = useRef<HTMLFormElement>();\n  const checkBtn = useRef<HTMLFormElement>();\n  const { userLoginData, setUserLogin } = useContext(LoginContext);\n  const navigate = useNavigate();\n\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail((e.target as HTMLInputElement).value);\n  };\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword((e.target as HTMLInputElement).value);\n  };\n\n  const handleRegister = (e: Event) => {\n    e.preventDefault();\n    setMessage('');\n    setIsSuccess(false);\n    if (form.current && checkBtn.current) {\n      form.current.validateAll();\n      if (checkBtn.current.context._errors.length === 0) {\n        setSubmitBtnState(true);\n        UsersAPI.loginUser({ email, password }, (errorMessage, data) => {\n          if (errorMessage) {\n            setMessage(errorMessage);\n            setIsSuccess(false);\n            setSubmitBtnState(false);\n          } else {\n            setMessage(`Пользователь вошёл`);\n            setIsSuccess(true);\n            if (data) {\n              setUserLogin({\n                isLogined: true,\n                token: data.token,\n                refreshToken: data.refreshToken,\n                userId: data.userId,\n                userName: data.name,\n                isLoginOpen: true,\n                isRegisterOpen: false,\n                pageForGames: -1,\n              });\n              setUserLoginToLocalStorage(\n                data.token,\n                data.refreshToken,\n                data.userId,\n                data.name,\n              );\n            }\n          }\n        });\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    setUserLogin({\n      ...userLoginData,\n      isLogined: false,\n      token: '',\n      refreshToken: '',\n      userId: '',\n    });\n    setMessage('');\n    setIsSuccess(false);\n    setSubmitBtnState(false);\n    clearUserLoginInLocalStorage();\n    navigate('/', { replace: true });\n  };\n\n  return (\n    <div className=\"login-form-wrapper\">\n      {!userLoginData.isLogined && (\n        <Avatar\n          sx={{ width: 90, height: 90 }}\n          style={{ margin: '10px auto 0' }}\n          src=\"/assets/img/user-login.png\"\n          alt=\"Register user\"\n        />\n      )}\n      {userLoginData.isLogined && (\n        <Avatar\n          sx={{ width: 90, height: 90 }}\n          style={{ margin: '10px auto 0' }}\n          src=\"/assets/img/user-added-logined.png\"\n          alt=\"Register user\"\n        />\n      )}\n      <CardContent>\n        {!userLoginData.isLogined && (\n          <Form onSubmit={handleRegister} ref={form}>\n            {!isSuccess && (\n              <div>\n                <div className=\"form-group\">\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      textAlign: 'left',\n                      marginLeft: '5px',\n                      marginBottom: '-10px',\n                    }}\n                  >\n                    email:\n                  </Typography>\n                  <Input\n                    id=\"login-email\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleEmailChange}\n                    validations={[required, validEmail]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      textAlign: 'left',\n                      marginLeft: '5px',\n                      marginBottom: '-10px',\n                    }}\n                  >\n                    пароль:\n                  </Typography>\n                  <Input\n                    id=\"login-password\"\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                    validations={[required, validPassword]}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    disabled={submitBtnState}\n                    style={{ marginTop: '10px' }}\n                  >\n                    Войти\n                  </Button>\n                </div>\n              </div>\n            )}\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    isSuccess ? 'alert alert-success' : 'alert alert-danger'\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton style={{ display: 'none' }} ref={checkBtn} />\n          </Form>\n        )}\n        {userLoginData.isLogined && (\n          <Typography style={{ marginBottom: '10px' }}>\n            Вы вошли как {userLoginData.userName}\n          </Typography>\n        )}\n        {userLoginData.isLogined && (\n          <Button variant=\"contained\" onClick={handleLogout}>\n            Выход\n          </Button>\n        )}\n      </CardContent>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Card, Button } from '@mui/material';\n\nimport { Sections } from '../../General/constants';\nimport { LoginContext } from '../../Context/login-context';\nimport Register from '../register-form/register';\nimport Login from '../login-form/login';\n\nconst Header = () => {\n  const { userLoginData, setUserLogin } = useContext(LoginContext);\n\n  const handleLoginOnClick = () => {\n    setUserLogin({\n      ...userLoginData,\n      isLoginOpen: !userLoginData.isLoginOpen,\n      isRegisterOpen: false,\n    });\n  };\n\n  const handleRegisterOnClick = () => {\n    setUserLogin({\n      ...userLoginData,\n      isLoginOpen: false,\n      isRegisterOpen: !userLoginData.isRegisterOpen,\n    });\n  };\n\n  const handleCloseModals = () => {\n    setUserLogin({\n      ...userLoginData,\n      isLoginOpen: false,\n      isRegisterOpen: false,\n    });\n  };\n\n  return (\n    <div className=\"App-header\">\n      <nav className=\"nav-bar\">\n        {Sections.filter((el) => {\n          if (userLoginData.isLogined) {\n            return true;\n          }\n          if (el.id === 5) {\n            return false;\n          }\n          return true;\n        }).map((el) => (\n          <nav key={el.id}>\n            <NavLink\n              style={({ isActive }) => ({\n                color: isActive ? '#278d9f' : 'white',\n              })}\n              to={el.routePath}\n            >\n              <span className=\"Section-Title\">{el.title}</span>\n            </NavLink>\n          </nav>\n        ))}\n      </nav>\n      <div className=\"header-buttons\">\n        {!userLoginData.isLogined && (\n          <Button\n            variant=\"contained\"\n            onClick={handleRegisterOnClick}\n            className=\"register-modal-btn\"\n          >\n            Регистрация\n          </Button>\n        )}\n        <div\n          className={`register-wrapper ${\n            userLoginData.isRegisterOpen && 'active'\n          }`}\n        >\n          <Button\n            variant=\"outlined\"\n            className=\"close-modal-register-btn\"\n            onClick={handleCloseModals}\n          >\n            x\n          </Button>\n          <Card className=\"card-register\">\n            <Register />\n          </Card>\n        </div>\n        <Button variant=\"contained\" onClick={handleLoginOnClick}>\n          {userLoginData.isLogined ? 'Выход' : 'Вход'}\n        </Button>\n        <div\n          className={`login-wrapper ${userLoginData.isLoginOpen && 'active'}`}\n        >\n          <Button\n            variant=\"outlined\"\n            className=\"close-modal-login-btn\"\n            onClick={handleCloseModals}\n          >\n            x\n          </Button>\n          <Card className=\"card-login\">\n            <Login />\n          </Card>\n        </div>\n        <div\n          className={`modal-background ${\n            (userLoginData.isLoginOpen || userLoginData.isRegisterOpen) &&\n            'active'\n          }`}\n          onClick={handleCloseModals}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\n/*  import { TAuth, TUser, TUserBase, TUserWord, TWord } from './api/types';\nimport WordsAPI from './api/wordsAPI';\nimport UsersAPI from './api/usersAPI';\nimport UserWordsAPI from './api/userWordsAPI';  */\nimport { ROUTES } from './General/constants';\nimport Footer from './Components/footer/footer';\nimport Header from './Components/header/header';\nimport { LoginContext } from './Context/login-context';\n\nimport './App.scss';\nimport UsersAPI from './api/usersAPI';\nimport {\n  clearUserLoginInLocalStorage,\n  setUserLoginToLocalStorage,\n} from './General/utils';\nimport { AppProvider } from './Context/audio-context';\n\n/*  const refreshToken = '';\nconst token =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxZmQ3YjlhZDgyMjdjMDAxNmVjZjQ4OSIsImlhdCI6MTY0NDA3OTIzNywiZXhwIjoxNjQ0MDkzNjM3fQ.6L_APiAIUedoDeMEELVYOafaqsnJlwSkpL7d4SbD6lo';\nconst userId = '61fd7b9ad8227c0016ecf489';\nconst wordId = '5e9f5ee35eb9e72bc21af66d';  */\n\nfunction App() {\n  const [userLoginData, setUserLogin] = useState({\n    isLogined: false,\n    token: '',\n    refreshToken: '',\n    userId: '',\n    userName: '',\n    isLoginOpen: false,\n    isRegisterOpen: false,\n    pageForGames: -1,\n  });\n  const value = { userLoginData, setUserLogin };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const refreshToken = localStorage.getItem('refreshToken');\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n\n    if (token && refreshToken && userId && userName) {\n      UsersAPI.getNewUserToken(userId, refreshToken, (errorMess, data) => {\n        if (errorMess) {\n          clearUserLoginInLocalStorage();\n        } else if (data) {\n          setUserLogin({\n            isLogined: true,\n            token: data.token,\n            refreshToken: data.refreshToken,\n            userId: data.userId,\n            userName,\n            isLoginOpen: false,\n            isRegisterOpen: false,\n            pageForGames: -1,\n          });\n          setUserLoginToLocalStorage(\n            data.token,\n            data.refreshToken,\n            userId,\n            userName,\n          );\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    /*  WordsAPI.getWords(2, 2, (data: TWord[]) => console.log('words: ', data));\n\n    WordsAPI.getWord(wordId, (data: TWord) => console.log('word: ', data));\n  }, []);\n\n  useEffect(() => {\n    /*  UsersAPI.createUser(\n      {\n        name: 'string',\n        email: 'stringggg@mail.ru',\n        password: 'string123',\n      },\n      (dataUser: TUser) => console.log(dataUser),\n    );  */\n    /*  UsersAPI.loginUser(\n      {\n        email: 'stringggg@mail.ru',\n        password: 'string123',\n      },\n      (data: TUserBase) => console.log(data),\n    );  */\n    /*  UsersAPI.getUser(userId, token, (data: TUser) =>\n      console.log('user: ', data),\n    );  */\n    /* UsersAPI.updateUser(\n      userId,\n      token,\n      {\n        name: 'stringgg',\n        email: 'stringggg@mail.ru',\n        password: 'string123',\n      },\n      (data: TUser) => console.log('user: ', data),\n    );\n    UsersAPI.deleteUser(userId, token, () =>\n      console.log('The user has been deleted'),\n    );\n\n    /*  UsersAPI.getNewUserToken(userId, refreshToken, (data: TAuth) =>\n      console.log('token: ', data),\n    );  */\n  }, []);\n\n  useEffect(() => {\n    /*  UserWordsAPI.getUserWords(userId, token, (data: TUserWord[]) =>\n      console.log(data),\n    );  */\n    /*  UserWordsAPI.createUserWord(\n      userId,\n      wordId,\n      token,\n      {\n        difficulty: 'hard',\n        optional: {},\n      },\n      (data: TUserWord) => console.log('createdWord: ', data),\n    );  */\n    /*  UserWordsAPI.getUserWord(userId, wordId, token, (data: TUserWord) =>\n      console.log(data),\n    );  */\n    /*  UserWordsAPI.updateUserWord(\n      userId,\n      token,\n      wordId,\n      {\n        difficulty: 'hard',\n        optional: {},\n      },\n      (data: TUserWord) => console.log('updatedWord: ', data),\n    );  */\n    /*  UserWordsAPI.deleteUserWord(userId, wordId, token, () =>\n      console.log('The word has been deleted'),\n    );  */\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <LoginContext.Provider value={value}>\n        <Header />\n        <AppProvider>\n          <Routes>\n            {ROUTES.map((el) => (\n              <Route key={el.id} path={el.routePath} element={el.element} />\n            ))}\n          </Routes>\n        </AppProvider>\n        <Footer />\n      </LoginContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}